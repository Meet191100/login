[{"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\index.js":"1","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\App.js":"2","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\Login.js":"3","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\fire.js":"4","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\admin.js":"5","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\student.js":"6"},{"size":243,"mtime":1625160288988,"results":"7","hashOfConfig":"8"},{"size":5111,"mtime":1625215205231,"results":"9","hashOfConfig":"8"},{"size":4413,"mtime":1625211873823,"results":"10","hashOfConfig":"8"},{"size":519,"mtime":1625160288987,"results":"11","hashOfConfig":"8"},{"size":342,"mtime":1625208708802,"results":"12","hashOfConfig":"8"},{"size":350,"mtime":1625208206715,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"dchfll",{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\index.js",[],["28","29"],"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\App.js",["30","31","32","33","34","35","36","37","38"],"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\Login.js",["39","40"],"import React, { useState } from \"react\";\r\nimport \"./lg.css\";\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        name,\r\n        setName,\r\n        surname,\r\n        setSurname,\r\n        number,\r\n        setNumber,\r\n        role,\r\n        setRole,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignup,\r\n        hasAccount,\r\n        setHasAccount,\r\n        emailError,\r\n        passwordError,\r\n    } = props;\r\n\r\n\r\n\r\n    const [selected, setSelected] = useState(\"Faculty\");\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                {hasAccount ?\r\n                    <p class=\"text1\">Sign In</p> :\r\n                    <p class=\"text\">Sign Up</p>\r\n                }\r\n                {!hasAccount ?\r\n                    (<div><label>Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        /></div>) : <div />\r\n                }\r\n                {!hasAccount ?\r\n                    (<div><label>Surname</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            autoFocus\r\n                            value={surname}\r\n                            onChange={(e) => setSurname(e.target.value)}\r\n                        /></div>) : <div />\r\n                }\r\n                {!hasAccount ?\r\n                    (<div><label>Phone Number</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            autoFocus\r\n                            value={number}\r\n                            onChange={(e) => setNumber(e.target.value)}\r\n                        /></div>) : <div />\r\n                }\r\n                 {!hasAccount ?\r\n                    (<div><label>Role</label>\r\n                       <select value={role} className=\"select\" onChange={(e) => setRole(e.target.value)}>\r\n                       <option></option>\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n\r\n                </select></div>) : <div />\r\n                }\r\n                <label>Email</label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    autoFocus\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                \r\n                {/* <input\r\n                    type=\"text\"\r\n                    required\r\n                    autoFocus\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                /> */\r\n\r\n                }\r\n                {/* <label className=\"label\">College</label> */}\r\n               \r\n                <div className=\"btnContainer\">\r\n\r\n                    {hasAccount ? (\r\n                        <>\r\n                            <button onClick={handleLogin}>Sign In</button>\r\n\r\n                            <p>\r\n                                Don't have a account?\r\n                                <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n\r\n                            </p>\r\n\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <button onClick={handleSignup}>Sign Up</button>\r\n                            <p>\r\n                                Have and account ?\r\n                                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\r\n                            </p>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\fire.js",[],"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\admin.js",[],"C:\\Users\\smitp\\OneDrive\\Desktop\\meet\\login\\src\\student.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":22,"column":10,"nodeType":"47","messageId":"48","endLine":22,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":66,"column":15,"nodeType":"51","messageId":"52","endLine":66,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":66,"column":33,"nodeType":"51","messageId":"52","endLine":66,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":80,"column":11,"nodeType":"55","messageId":"56","endLine":80,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":128,"column":11,"nodeType":"55","messageId":"56","endLine":131,"endColumn":19},{"ruleId":"49","severity":1,"message":"57","line":147,"column":18,"nodeType":"51","messageId":"52","endLine":147,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":197,"column":6,"nodeType":"60","endLine":197,"endColumn":8,"suggestions":"61"},{"ruleId":"49","severity":1,"message":"57","line":201,"column":15,"nodeType":"51","messageId":"52","endLine":201,"endColumn":17},{"ruleId":"49","severity":1,"message":"57","line":203,"column":22,"nodeType":"51","messageId":"52","endLine":203,"endColumn":24},{"ruleId":"45","severity":1,"message":"62","line":30,"column":12,"nodeType":"47","messageId":"48","endLine":30,"endColumn":20},{"ruleId":"45","severity":1,"message":"63","line":30,"column":22,"nodeType":"47","messageId":"48","endLine":30,"endColumn":33},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [authListener]",{"range":"69","text":"70"},[4016,4018],"[authListener]"]